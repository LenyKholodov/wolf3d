#ifndef __GAME_MAP__
#define __GAME_MAP__

#include "g_types.h"
#include "g_object.h"

#include "map.h"

/////////////////////////////////////////////////////////////////////////////
//////Игровая карта
/////////////////////////////////////////////////////////////////////////////
class  GameMap: public GameObject
{
  public:
                        GameMap ();
           virtual      ~GameMap();

////////////////////////////////////////////////////////////////////////////
//////Основные абстрактные функции для всех игровых объектов
////////////////////////////////////////////////////////////////////////////
    virtual     void            Load (BinFile*);
    virtual     void            Save (BinFile*);
    virtual     BOOL            Exec (GameMessage*) { return FALSE; }

    virtual     GameObjects     type () const  { return GAME_MAP; }
    virtual     void            dump (ostream&) const;

////////////////////////////////////////////////////////////////////////////
//////Работа с памятью
////////////////////////////////////////////////////////////////////////////
                void*           operator new (size_t x) { return ::operator new(x); }
                void            operator delete (void* x) { ::operator delete (x); }

////////////////////////////////////////////////////////////////////////////
//////Работа с картой
////////////////////////////////////////////////////////////////////////////
                void            PutObject (uint index,ID);
                ID              GetObject (uint index);
                void            ClearAll  ();

////////////////////////////////////////////////////////////////////////////
//////Передача сообщений на объекты
//////Передача сообщения объекту, котрый находится в клетке index
////////////////////////////////////////////////////////////////////////////
                void            SendMessage (uint index,GameMessage*,int size);

////////////////////////////////////////////////////////////////////////////
//////Управление памятью
////////////////////////////////////////////////////////////////////////////
                void*           operator new (size_t,GameSystem* = gameSystem);

  protected:
             ID*        mMap;
};

#endif