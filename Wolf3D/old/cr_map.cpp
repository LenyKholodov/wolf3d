#include <stdlib.h>
#include <string.h>
#include <iostream.h>

#include "map.h"
#include "light.h"

#include "debug.h"

char * stageMap[]=
{
 "****************************************************************",
 "*       *                                                      *",
 "*                                                              *",
 "*       *        2                                2            *",
 "*       *                                                ***   *",
 "*       ************************************************1*     *",
 "*                3                                    1     2  *",
 "*    3                                           *******1*     *",
 "*          3                     *********************** ***** *",
 "*                        2       *                           *1*",
 "***1*     ********               *      ****************1*** * *",
 "*** *******      *               *      *              * *   * *",
 "*                *                 ******      2       * * * * *",
 "* ***********    ****1******************* *            * * * * *",
 "* *                 *                     **    ******** * * * *",
 "* ****************************************      *     ** *   *1*",
 "*2*                           2                 * ***    ***** *",
 "* *             ********************************* ************ *",
 "* *             *                                 *            *",
 "* *      2      ***  **************************** * ************",
 "* *  **************  ****************************1*            *",
 "* *                                             * ************ *",
 "*            2                                  * *            *",
 "* *             ******        *****       ***** * *     ********",
 "* *             ******        *****       ***** * *****        *",
 "* *                                     2       *     *        *",
 "* *                                             *     *        *",
 "*2***********************************************  2  *        *",
 "* ***********************************************     *** * ** *",
 "*                          2                 ****     *   *1**1*",
 "*                     *******************        ***1**   * ** *",
 "********************* **************************1***      * ** *",
 "*                   *      2                         ****** ** *",
 "* ********   ***************************                  * ** *",
 "* *                                    *                  * ** *",
 "* * ************************************                 **1**1*",
 "* * *                                                     * ** *",
 "* * *                                                     * ** *",
 "* * *            2                            2           * ** *",
 "* * *                                                     * ** *",
 "* * ******************************                   ****** ** *",
 "*                                *                   *       * *",
 "*1********************************                   ******* * *",
 "* *                    2                                   * * *",
 "* *             ****************************************** * * *",
 "*  *                    2                       ********** * * *",
 "*  *1**************************************     ******     * * *",
 "*  * *      *******************************             **** * *",
 "*  * ***    *                               2                * *",
 "*  *   *    *   ********************************************** *",
 "*  *   *  2  *   **************                *************** *",
 "*  *   *      **   ********     ***                          *1*",
 "*  *    ***** ****            ******                         * *",
 "*  *                       * *******                           *",
 "*  *  ***************     2*                                   *",
 "* *   *             *******  *******                           *",
 "* *1* *  ***********               *                2          *",
 "* * *  2    *                      *                           *",
 "* * *       *****   ****************                           *",
 "* *1*****  **                      *                           *",
 "* *                         2      *                           *",
 "* **********************************                           *",
 "*                    2                                         *",
 "****************************************************************",
};

int    main(int argc,char* argv[])
{
        if (argc<3)
        {
          cout<<"dest.map lightmap.lmf"<<endl;
          return 1;
        }
        cout<<"Create new map..."<<endl;
        Map*    map = Map::CreateMap();
        cout<<"Create light map..."<<endl;
        LightCompile* lMap = new LightCompile(map);
        lMap->reset(MAX_LIGHT_LEVELS-5);

        for (int y=0;y<64;y++)
            for (int x=0;x<64;x++)
                switch(stageMap[y][x])
                {
                  case '*':
                               Block bl;
                               bl.type  = Map::WALL;
                               bl.id.wall.id_N = 0;
                               bl.id.wall.id_W = 1;
                               bl.id.wall.id_S = 2;
                               bl.id.wall.id_E = 3;
                               map->SetBlock(Index(y,x),bl);
                               break;
                  case '1':
                               bl.type  = Map::DOOR; //door
                               bl.id.id = 4;
                               map->SetBlock(Index(y,x),bl);
                               lMap->SetLightLevel(Index(y,x),NORTH,0,0);
                               lMap->SetLightLevel(Index(y,x),SOURTH,0,0);
                               lMap->SetLightLevel(Index(y,x),EAST,0,0);
                               lMap->SetLightLevel(Index(y,x),WEST,0,0);
                               break;
                  case '2':
                               bl.type  = Map::LIGHT; //door
                               bl.id.id = 0;
                               map->SetBlock(Index(y,x),bl);
                               break;
                  case '3':
                               bl.type  = Map::SPRITE; //sprite
                               bl.id.sprite.already = 0;
                               bl.id.sprite.id = random(3);
                               map->SetBlock(Index(y,x),bl);
                               break;
                  default:     bl.type = Map::FREE;
                               bl.id.id = 0;
                               map->SetBlock(Index(y,x),bl);
                }

        lMap->recalc();

        cout<<"Save light map..."<<endl;
        cout<<argv[2]<<endl;
        lMap->Save(argv[2]);
        cout<<"Save new map..."<<endl;
        cout<<argv[1]<<endl;
        map->Save(argv[1]);

        cout<<"Saving is OK"<<endl;

        delete map;     //!!
        delete lMap;    //!!

        return 0;
}