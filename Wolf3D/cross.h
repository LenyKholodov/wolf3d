#ifndef __CROSS__
#define __CROSS__

#include <fixed.h>
#include <types.h>

#include "map.h"

const    Fixed  FIXED_OUT_OF_MAP = int2fixed(OUT_OF_MAP);
const    Fixed  FX_MAP_WIDTH     = int2fixed(MAP_WIDTH);

#pragma pack(1)
struct  CrossIndex
{
  int   crossIndex;
  int   prevIndex;
  Side  side;
  Fixed dist;
};

#pragma pack(1)

/////////////////////////////////////////////////////////////////////////////
///Следующая функция возвращает последнюю клетку перед пересeчением
/////////////////////////////////////////////////////////////////////////////

void    FindCross (Fixed,Fixed,Angle,Fixed maxDist,Map*,CrossIndex&);

/////////////////////////////////////////////////////////////////////////////
///Следующая функция возвращает угол между точками
/////////////////////////////////////////////////////////////////////////////

Angle           FindAngle    (Fixed,Fixed,Fixed,Fixed);

/////////////////////////////////////////////////////////////////////////////
////Находит все видимые монстры в пределах области обозрения
/////////////////////////////////////////////////////////////////////////////

int             FindSprites  (Fixed,Fixed,Angle,uint* vis_index,Map*);

/////////////////////////////////////////////////////////////////////////////
////Определяет положение веkтора относительно точки
/////////////////////////////////////////////////////////////////////////////

BOOL            IsVisible    (Fixed x,Fixed y,Fixed _x,Fixed _y,Angle _angle);

////////////////////////////////////////////////////////////////////////////
////Определяет есть ли стена или дверь (преграда) между точками
/////////////////////////////////////////////////////////////////////////////

BOOL            IsCross      (Fixed,Fixed,Fixed,Fixed,Map*);

#endif

